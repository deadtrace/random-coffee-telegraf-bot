import { Scenes, Composer, Markup } from "telegraf";
import SCENES from "./scenesList.js";
import User from "../models/User.js";
import logError from "../helpers/logError.js";

const handleEdit = new Composer();
handleEdit.on("text", async (ctx) => {
  try {
    await User.updateOne(
      { tid: ctx.chat.id },
      { workspace: ctx.message.text, username: ctx.chat.username ?? null }
    );
    await ctx.telegram.editMessageReplyMarkup(
      ctx.chat.id,
      ctx.session.lastBotMessage,
      "",
      {}
    );
    await ctx.reply("–î–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã!");
  } catch (error) {
    logError(error, ctx);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.");
  }
  await ctx.scene.leave();
  return ctx.scene.enter(SCENES.EDIT_PROFILE);
});
handleEdit.action("back", async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.deleteMessage();
  await ctx.scene.leave();
  return ctx.scene.enter(SCENES.EDIT_PROFILE);
});

const editProfileWorkspaceScene = new Scenes.WizardScene(
  SCENES.EDIT_PROFILE_WORKSPACE,
  async (ctx) => {
    const { message_id } = await ctx.reply(
      "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –í–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ, —Ä–æ–ª–∏ –∏ –∑–∞–¥–∞—á–∞—Ö:",
      Markup.inlineKeyboard([Markup.button.callback("–ù–∞–∑–∞–¥ üîô", "back")])
    );
    ctx.session.lastBotMessage = message_id;
    return ctx.wizard.next();
  },
  handleEdit
);

export default editProfileWorkspaceScene;
