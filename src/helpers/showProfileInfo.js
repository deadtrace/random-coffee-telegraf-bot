import User from "../models/User.js";
import logError from "./logError.js";
import parseForMarkdown from "./parseForMarkdown.js";
import showMainButtons from "./showMainButtons.js";

const showProfileInfo = async (ctx) => {
  try {
    const user = await User.findOne({ tid: ctx.chat.id }).exec();
    const { name, workspace, hobbies, photo_id } = user;
    const text = parseForMarkdown(
      `*–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:*\n*–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è:* ${name}\n*–ö–æ–º–∞–Ω–¥–∞, —Ä–æ–ª—å, –∑–∞–¥–∞—á–∏ üë®üèª‚Äçüíª:*\n${workspace}\n${
        hobbies ? `*–•–æ–±–±–∏, —É–≤–ª–µ—á–µ–Ω–∏—è üèÇüèª:*\n${hobbies}` : ""
      }`
    );

    if (photo_id) {
      await ctx.replyWithPhoto(photo_id, {
        caption: text,
        parse_mode: "MarkdownV2",
      });
    } else {
      await ctx.replyWithMarkdownV2(text);
    }
  } catch (error) {
    logError(error, ctx);
    await ctx.reply(
      "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Ç–≤–æ–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –æ –≤–æ–∑–Ω–∏–∫—à–µ–π –ø—Ä–æ–±–ª–µ–º–µ –≤ —Ñ–∏–¥–±–µ–∫ –æ –±–æ—Ç–µ. –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—Å—ë –±—ã—Å—Ç—Ä–æ –∏—Å–ø—Ä–∞–≤—è—Ç)"
    );
  }
};

export default showProfileInfo;
